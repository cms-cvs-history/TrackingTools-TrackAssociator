# -*-SH-*-
process TEST = {

  service = MessageLogger {
          vstring destinations = {"cout"}
	  PSet cout = {
		      string threshold = "INFO"
		      # string threshold = "DEBUG"
			PSet default = { int32 limit = -1  }
		      }
           vstring debugModules = { "test" }
  }
  
  source = PoolSource {
     untracked vstring fileNames = {
     # "file:/afs/cern.ch/user/d/dmytro/public/files/0_8_1-muons.root"
       "file:/afs/cern.ch/user/d/dmytro/scratch0/reco_muons1000_1002.root"
     }
     untracked int32 maxEvents = 10
     # untracked uint32 skipEvents = 150
  }
    
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
    
#   include "Geometry/CMSCommonData/data/cmsSimIdealGeometryXML.cfi"
   include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
   include "Geometry/CaloEventSetup/data/CaloTopology.cfi"

#   include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
   include "Geometry/DTGeometry/data/dtGeometry.cfi"
   include "Geometry/RPCGeometry/data/rpcGeometry.cfi"
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"
   
   module Out = PoolOutputModule 
     {
	untracked string fileName = "muons.root"
	untracked vstring outputCommands =
	          {
		  "drop *",
		  "keep *_stuff_*_*",
		  "keep *_SimG4Object_*_*"
		  }
     }

   module test = MuonIdProducer {
      vstring labels = {
      "EBRecHitCollection, ecalRecHit, EcalRecHitsEB",
      "CaloTowerCollection, towerMaker",
      "DTRecSegment4DCollection, dt4DSegments"
      }
      bool useEcal = true
      bool useHcal = true
      bool useMuon = true
      double minPt = 5
      double maxDistanceFromIP = 50
      string inputCollection = "TrackCollection, rsAnalyticalTracks"
      string outputCollection = "muons"
    }

    path p = { test }
    endpath outpath = { Out }
}

